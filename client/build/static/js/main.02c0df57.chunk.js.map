{"version":3,"sources":["components/AjoutCapteur.js","components/Capteur.js","components/Ensemble.js","components/GererEnsembles.js","Content.js","Navbar.js","App.js","serviceWorker.js","index.js","img/capteurs.png","img/ariatis_logo_full.png"],"names":["AjoutCapteur","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","addBdd","errorBdd","e","_this2","preventDefault","data","nom","document","getElementById","value","refModele","constructeur","typeMesure","uniteMesure","reseau","latitude","longitude","axios","post","then","response","status","setState","catch","err","console","log","react_default","a","createElement","id","Container","Row","Col","xs","md","span","offset","Card","Header","Title","Body","Form","onSubmit","onFormSubmit","bind","Group","controlId","Label","Control","type","placeholder","as","Button","variant","Component","Capteur","callCapteurs","asyncToGenerator","regenerator_default","mark","_callee","body","wrap","_context","prev","next","get","sent","Error","message","abrupt","stop","res","mesCapteurs","map","capteur","i","key","Table","striped","bordered","hover","responsive","mesEnsembles","group","undefined","capteurs","capteurID","src","capteurImg","alt","capteurNom","GererEnsembles","onDragStart","dataTransfer","setData","onDragOver","onDropAdd","groupName","getData","groups","filter","updateGroup","newCapteur","toConsumableArray","push","objectSpread","onDragStartRemove","groupNom","onDropRemove","removeCapteur","splice","callEnsembles","_callee2","_context2","addEnsembleErr","newArray","nomEnsemble","postGroup","style","cursor","deleteGroup","put","delete","_this3","addGroup","onChange","nameEnsemble","Text","className","onDrop","draggable","_id","onMouseDown","dragging","onMouseUp","Footer","onClick","removeGroup","Main","react_router","exact","path","component","Ensemble","Navbars","Navbar","bg","expand","Brand","ariatisLogo","Toggle","aria-controls","Collapse","Nav","lib","to","Link","eventKey","App","Navbar_Navbars","Content","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.02c0df57.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Row, Col, Form, Card, Button } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nclass AjoutCapteur extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      addBdd: false,\r\n      errorBdd: false\r\n    }\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    let nomCapteur = document.getElementById('nomCapteur').value\r\n    let refModele = document.getElementById('refModele').value\r\n    let constructeur = document.getElementById('constructeur').value\r\n    let typeMesure = document.getElementById('typeMesure').value\r\n    let uniteMesure = document.getElementById('uniteMesure').value\r\n    let reseau = document.getElementById('reseau').value\r\n    let latitude = document.getElementById('latitude').value\r\n    let longitude = document.getElementById('longitude').value\r\n\r\n    let data = {\r\n      \"nom\": nomCapteur,\r\n      \"refModele\": refModele,\r\n      \"constructeur\": constructeur,\r\n      \"typeMesure\": typeMesure,\r\n      \"uniteMesure\": uniteMesure,\r\n      \"reseau\": reseau,\r\n      \"latitude\": latitude,\r\n      \"longitude\": longitude\r\n    }\r\n\r\n    axios.post('/capteurs', data)\r\n    .then(response => {\r\n      response.status === 200 ? this.setState({addBdd: true, errorBdd: false}) : this.setState({addBdd: false, errorBdd: true})\r\n    })\r\n    .then(this.setState({addBdd: false, errorBdd: false}))\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"ajout-capteur\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} md={{ span:6, offset:3 }}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>\r\n                    Ajouter un nouveau capteur\r\n                  </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n                    <Form.Group controlId=\"nomCapteur\">\r\n                      <Form.Label>Nom du capteur</Form.Label>\r\n                      <Form.Control type=\"text\" placeholder=\"Mon capteur 1\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"refModele\">\r\n                      <Form.Label>Référence du modèle</Form.Label>\r\n                      <Form.Control type=\"text\" placeholder=\"Référence du capteur\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"constructeur\">\r\n                      <Form.Label>Constructeur</Form.Label>\r\n                      <Form.Control type=\"text\" placeholder=\"Constructeur du capteur\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"typeMesure\">\r\n                      <Form.Label>Type de mesure</Form.Label>\r\n                      <Form.Control as=\"select\">\r\n                        <option>Pluviométrie</option>\r\n                        <option>Vitesse</option>\r\n                        <option>Température</option>\r\n                        <option>Position GPS</option>\r\n                        <option>Volume</option>\r\n                        <option>Poids</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"uniteMesure\">\r\n                      <Form.Label>Unité de mesure</Form.Label>\r\n                      <Form.Control as=\"select\">\r\n                        <option>mm</option>\r\n                        <option>km/h</option>\r\n                        <option>°C</option>\r\n                        <option>Coordonnées GPS</option>\r\n                        <option>m3</option>\r\n                        <option>Kg</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"reseau\">\r\n                      <Form.Label>Réseau utilisé</Form.Label>\r\n                      <Form.Control type=\"text\" placeholder=\"Sigfox, ...\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"latitude\">\r\n                      <Form.Label>Latitude</Form.Label>\r\n                      <Form.Control type=\"text\" placeholder=\"2.294481\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"longitude\">\r\n                      <Form.Label>Longitude</Form.Label>\r\n                      <Form.Control type=\"text\" placeholder=\"48.858370\" />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"reset\">\r\n                      Annuler\r\n                    </Button>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Enregistrer\r\n                    </Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AjoutCapteur;\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Table } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nclass Capteur extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      data: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callCapteurs()\r\n      .then(res => this.setState({ data: res }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  callCapteurs = async () => {\r\n    const response = await axios.get('/capteurs')\r\n    const body = await response.data\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message)\r\n    }\r\n    return body\r\n  }\r\n\r\n  render() {\r\n    const mesCapteurs = (this.state.data !== null && this.state.data.map((capteur, i) => {\r\n      return(\r\n        <tr key={i}>\r\n          <td>{capteur.nom}</td>\r\n          <td>{capteur.refModele}</td>\r\n          <td>{capteur.constructeur}</td>\r\n          <td>{capteur.typeMesure}</td>\r\n          <td>{capteur.uniteMesure}</td>\r\n          <td>{capteur.reseau}</td>\r\n          <td>x:{capteur.latitude} y:{capteur.longitude}</td>\r\n        </tr>\r\n      )\r\n    }))\r\n    return (\r\n      <section id=\"capteurs\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nom</th>\r\n                    <th>Référence</th>\r\n                    <th>Constructeur</th>\r\n                    <th>Type de mesure</th>\r\n                    <th>Unité de mesure</th>\r\n                    <th>Réseau</th>\r\n                    <th>Coordonnées GPS</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {mesCapteurs}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Capteur\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Card } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nimport capteurImg from '../img/capteurs.png'\r\n\r\nclass Capteur extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      data: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callCapteurs()\r\n      .then(res => this.setState({ data: res }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  callCapteurs = async () => {\r\n    const response = await axios.get('/ensembles')\r\n    const body = await response.data\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message)\r\n    }\r\n    return body\r\n  }\r\n\r\n  render() {\r\n    const mesEnsembles = (this.state.data !== null && this.state.data.map((group, i) => {\r\n      return(\r\n        <Col xs={12} md={4} key={i}>\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title>\r\n                {group.nom}\r\n              </Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {\r\n                group.capteurs !== undefined && group.capteurs.map((capteur, i) => {\r\n                  return(\r\n                    <Col xs={12} key={i} id={capteur.capteurID}>\r\n                      <img src={capteurImg} alt={capteur.capteurNom} />\r\n                      {capteur.capteurNom}\r\n                    </Col>\r\n                  )\r\n                })\r\n              }\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      )\r\n    }))\r\n    return (\r\n      <section id=\"ensembles\">\r\n        <Container>\r\n          <Row>\r\n            {mesEnsembles}\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Capteur\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Button, Form, Card } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nimport capteurImg from '../img/capteurs.png'\r\n\r\nclass GererEnsembles extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      capteurs: null,\r\n      group: [],\r\n      addEnsembleErr: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callCapteurs()\r\n      .then(res => this.setState({ capteurs: res }))\r\n      .catch(err => console.log(err))\r\n\r\n    this.callEnsembles()\r\n      .then(res => this.setState({ group: res }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  nameEnsemble() {\r\n    this.setState({addEnsembleErr: false})\r\n  }\r\n\r\n  // Dragging + State management\r\n  addGroup(e) {\r\n    e.preventDefault()\r\n    let newArray = [...this.state.group]\r\n    let nomEnsemble = document.getElementById('nomEnsemble').value\r\n\r\n    nomEnsemble !== '' ? newArray.push({nom:nomEnsemble}) : this.setState({addEnsembleErr: true})\r\n\r\n    this.setState({\r\n      group: newArray\r\n    })\r\n\r\n    let data = {\r\n      \"nom\": nomEnsemble,\r\n      \"capteurs\": []\r\n    }\r\n\r\n    this.postGroup(data)\r\n  }\r\n\r\n\r\n  dragging(id) {\r\n    let element = document.getElementById(id)\r\n    element.style.cursor = 'grabbing'\r\n  }\r\n\r\n  draggable(id) {\r\n    let element = document.getElementById(id)\r\n    element.style.cursor = 'grab'\r\n  }\r\n\r\n  onDragStart = (e, id, nom) => {\r\n    e.dataTransfer.setData('id', id)\r\n    e.dataTransfer.setData('nom', nom)\r\n  }\r\n\r\n  onDragOver = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  onDropAdd = (e, groupName) => {\r\n    let capteurID = e.dataTransfer.getData(\"id\")\r\n    let capteurNom =  e.dataTransfer.getData(\"nom\")\r\n\r\n    let groups = this.state.group.filter(group => {\r\n      if (group.nom === groupName) {\r\n        if (group.capteurs === undefined) {\r\n          group.capteurs = [{capteurID: capteurID, capteurNom: capteurNom}]\r\n          this.updateGroup(group.nom, group.capteurs)\r\n        } else {\r\n          let newCapteur = [...group.capteurs]\r\n          newCapteur.push({capteurID: capteurID, capteurNom: capteurNom})\r\n          group.capteurs = newCapteur\r\n          this.updateGroup(group.nom, group.capteurs)\r\n        }\r\n      }\r\n      return groups\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state\r\n    })\r\n  }\r\n\r\n  onDragStartRemove = (e, id, nom, groupNom) => {\r\n    e.dataTransfer.setData('id', id)\r\n    e.dataTransfer.setData('nom', nom)\r\n    e.dataTransfer.setData('groupNom', groupNom)\r\n  }\r\n\r\n  onDropRemove = (e) => {\r\n    let capteurID = e.dataTransfer.getData(\"id\")\r\n    let groupNom =  e.dataTransfer.getData(\"groupNom\")\r\n\r\n    let groups = this.state.group.filter(group => {\r\n      if(group.nom === groupNom) {\r\n        let removeCapteur = [...group.capteurs]\r\n\r\n        removeCapteur.map((capteur, i) => {\r\n          if(capteur.capteurID === capteurID) {\r\n            removeCapteur.splice(i, 1)\r\n            group.capteurs = removeCapteur\r\n            this.updateGroup(group.nom, group.capteurs)\r\n          }\r\n          return groups\r\n        })\r\n      }\r\n      return groups\r\n    })\r\n\r\n    this.setState({\r\n      ...this.state\r\n    })\r\n  }\r\n\r\n  removeGroup(groupNom) {\r\n    let groups = [...this.state.group]\r\n\r\n    groups.map((group, i) => {\r\n      console.log(group.nom, groupNom)\r\n      if(group.nom === groupNom) {\r\n        groups.splice(i, 1)\r\n        group = groups\r\n      }\r\n      return groups\r\n    })\r\n\r\n    this.setState({\r\n      group: groups\r\n    })\r\n    console.log('groups : ', groups)\r\n    this.deleteGroup(groupNom)\r\n  }\r\n\r\n  // CRUD Operations\r\n  callCapteurs = async () => {\r\n    const response = await axios.get('/capteurs')\r\n    const body = await response.data\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message)\r\n    }\r\n    return body\r\n  }\r\n\r\n  callEnsembles = async () => {\r\n    const response = await axios.get('/ensembles')\r\n    const body = await response.data\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message)\r\n    }\r\n    return body\r\n  }\r\n\r\n  postGroup(data) {\r\n    axios.post('/ensembles', data)\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  updateGroup(nom, data) {\r\n    axios.put('/ensembles/' + nom, data)\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  deleteGroup(nom) {\r\n    axios.delete('/ensembles/' + nom)\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"gerer_ensembles\">\r\n        <Container>\r\n          <Form onSubmit={this.addGroup.bind(this)}>\r\n            <Form.Row>\r\n              <Col>\r\n                <Form.Control id=\"nomEnsemble\" type=\"text\" placeholder=\"Nom de l'ensemble\" onChange={this.nameEnsemble.bind(this)} />\r\n                {this.state.addEnsembleErr && <Form.Text className=\"error\">Vous devez entrer un nom pour votre ensemble</Form.Text>}\r\n              </Col>\r\n              <Col>\r\n                <Button type=\"submit\">Ajouter un ensemble</Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n          <Row>\r\n            <Col xs={12} md={6}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>\r\n                    Mes capteurs\r\n                  </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body onDragOver={(e)=>this.onDragOver(e)} onDrop={(e)=>this.onDropRemove(e)}>\r\n                    {\r\n                      this.state.capteurs !== null && this.state.capteurs.map(capteur => {\r\n                        return(\r\n                          <Col xs={12} md={6} draggable key={capteur._id} id={capteur._id} onDragStart={(e) => this.onDragStart(e, capteur._id, capteur.nom)} onMouseDown={this.dragging.bind(this, capteur._id)} onMouseUp={this.draggable.bind(this, capteur._id)}>\r\n                            <img src={capteurImg} alt={capteur.nom} />\r\n                            {capteur.nom}\r\n                          </Col>\r\n                        )\r\n                      })\r\n                    }\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              {\r\n                this.state.group.map((group, i) => {\r\n                  return (\r\n                    <Card key={i}>\r\n                      <Card.Header>\r\n                        <Card.Title>\r\n                          {group.nom}\r\n                        </Card.Title>\r\n                      </Card.Header>\r\n                      <Card.Body onDragOver={(e)=>this.onDragOver(e)} onDrop={(e)=>this.onDropAdd(e, group.nom)}>\r\n                        {\r\n                          group.capteurs !== undefined && group.capteurs.map((capteur, i) => {\r\n                            return(\r\n                              <Col xs={12} md={6} key={i} draggable id={capteur.capteurID} onDragStart={(e) => this.onDragStartRemove(e, capteur.capteurID, capteur.capteurNom, group.nom)} onMouseDown={this.dragging.bind(this, capteur.capteurID)} onMouseUp={this.draggable.bind(this, capteur.capteurID)}>\r\n                                <img src={capteurImg} alt={capteur.capteurNom} />\r\n                                {capteur.capteurNom}\r\n                              </Col>\r\n                            )\r\n                          })\r\n                        }\r\n                      </Card.Body>\r\n                      <Card.Footer className=\"text-muted\" onClick={this.removeGroup.bind(this, group.nom)}>Supprimer l'ensemble</Card.Footer>\r\n                    </Card>\r\n                  )\r\n                })\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GererEnsembles\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport AjoutCapteur from \"./components/AjoutCapteur\"\r\nimport Capteur from \"./components/Capteur\"\r\nimport Ensemble from \"./components/Ensemble\"\r\nimport GererEnsembles from \"./components/GererEnsembles\"\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' component={AjoutCapteur} />\r\n      <Route path='/mescapteurs' component={Capteur} />\r\n      <Route path='/mesensembles' component={Ensemble} />\r\n      <Route path='/gestionensembles' component={GererEnsembles} />\r\n      <Route path='/ajoutcapteurs' component={AjoutCapteur} />\r\n    </Switch>\r\n  </main>\r\n)\r\n\r\nexport default Main\r\n","import React, { Component }  from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport ariatisLogo from './img/ariatis_logo_full.png'\r\n\r\nexport default class Navbars extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand><img src={ariatisLogo} alt='Logo Ariatis' /></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer to={\"/mescapteurs\"}>\r\n              <Nav.Link eventKey={0}>Mes capteurs</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={\"/mesensembles\"}>\r\n              <Nav.Link eventKey={1}>Mes ensembles</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={\"/ajoutcapteurs\"}>\r\n              <Nav.Link eventKey={2}>Ajouter des capteurs</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={\"/gestionensembles\"}>\r\n              <Nav.Link eventKey={3}>Gérer mes ensembles</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Content from './Content'\r\nimport Navbar from './Navbar'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Navbar />\r\n        <Content />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// Library import\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n// CSS import\r\nimport './style/index.css'\r\nimport './style/spacelab.min.css'\r\n\r\n// Component import\r\nimport App from './App'\r\n\r\n// Services import\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>\r\n), document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/capteurs.72109901.png\";","module.exports = __webpack_public_path__ + \"static/media/ariatis_logo_full.3163df45.png\";"],"sourceRoot":""}