{"version":3,"sources":["components/backoffice/CardHome.js","containers/Home.js","actions/ClientAction.js","actions/ParcAction.js","actions/CapteurAction.js","components/backoffice/Ajout.js","containers/Creation.js","components/backoffice/UpdateClient.js","components/backoffice/GererClient.js","components/backoffice/UpdateParc.js","components/backoffice/GererParc.js","components/backoffice/UpdateCapteur.js","components/backoffice/GererCapteur.js","Content.js","Navbar.js","App.js","serviceWorker.js","reducers/index.js","reducers/CapteurReducer.js","reducers/ClientReducer.js","reducers/ParcReducer.js","index.js","img/ariatis_logo_full.png"],"names":["CardHome","props","Card","Header","title","Body","Text","text","Footer","to","url","Link","href","link","Home","id","Container","Row","Col","xs","className","CardDeck","sm","md","Component","getClients","dispatch","axios","get","then","response","type","payload","data","catch","err","getOneClient","clearOneClient","postClient","clients","post","updateClient","newData","put","datas","deleteClient","delete","getParcs","getOneParc","clearOneParc","postParc","parcs","updateParc","deleteParc","getCapteurs","getOneCapteur","clearOneCapteur","postCapteur","capteurs","updateCapteur","deleteCapteur","Ajout","state","client","parc","capteur","clientName","parcName","e","this","setState","target","name","document","getElementById","style","display","reset","preventDefault","value","nom","description","parcDesc","postClients","_id","nomCapteur","refModele","constructeur","typeMesure","uniteMesure","reseau","latitude","longitude","postParcs","newArray","push","Title","Form","onSubmit","addClient","bind","Group","controlId","Control","placeholder","onChange","inputName","as","rows","Button","addParc","addCapteur","Label","variant","undefined","length","map","i","key","onClick","newParc","newClient","connect","bindActionCreators","UpdateClient","clientID","handler","oneClient","defaultValue","modifyClient","GererClient","clientNom","update","show","displayClients","icon","handleShow","finishedUpdate","Table","striped","bordered","hover","responsive","Modal","onHide","handleClose","closeButton","UpdateParc","parcID","oneParc","modifyParc","GererParc","parcNom","displayParcs","UpdateCapteur","capteurID","oneCapteur","modifyCapteur","GererCapteur","capteurNom","displayCapteurs","Main","exact","path","component","Creation","Navbars","Navbar","bg","expand","Brand","src","ariatisLogo","alt","Toggle","aria-controls","Collapse","Nav","NavDropdown","eventKey","library","add","faPencilAlt","faTimes","faPlus","App","Content","Boolean","window","location","hostname","match","combineReducers","action","postCapteurs","currentDataToDelete","filter","ok","capteursArray","newDatas","oldCapteur","findIndex","newCapteur","msg","sort","a","b","nomA","nomB","toLowerCase","clientsArray","parcsArray","oldClient","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","createPromise","thunk","createLogger","store","createStore","reducers","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.51e5aa31.chunk.js","sourcesContent":["import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CardHome = (props) => {\n  return (\n    <Card>\n      <Card.Header>{props.title}</Card.Header>\n      <Card.Body>\n        <Card.Text>{props.text}</Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <LinkContainer to={props.url}>\n          <Card.Link href=\"#\"><small>{props.link}</small></Card.Link>\n        </LinkContainer>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default CardHome\n","import React, { Component } from 'react'\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap'\n\nimport CardHome from '../components/backoffice/CardHome'\n\nclass Home extends Component {\n  render() {\n    return (\n      <section id=\"home\">\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <h2>Bienvenue dans votre outil de gestion et de dashboarding</h2>\n            </Col>\n          </Row>\n          <Row id=\"creation\">\n            <Col xs={12} className=\"home-section-title\">\n              <h3>Espace de création</h3>\n            </Col>\n            <CardDeck>\n              <Col xs={12} sm={6} md={4}>\n                <CardHome title={'Créer un client'}\n                text={'Cette interface vous permet de créer un client puis ensuite les parcs et capteurs.'}\n                url={'/creationclient'}\n                link={'Créer un client'} />\n              </Col>\n              <Col xs={12} sm={6} md={4}>\n                <CardHome title={'Créer un parc'}\n                text={'Cette interface vous permet de créer un parc en l\\'associant à un client puis ses capteurs.'}\n                url={'/'}\n                link={'Créer un parc (feature en cours)'} />\n              </Col>\n              <Col xs={12} sm={6} md={4}>\n                <CardHome title={'Créer vos capteurs'}\n                text={'Cette interface vous permet de créer vos capteurs en les associant à un client et un parc.'}\n                url={'/'}\n                link={'Créer les capteurs (feature en cours)'} />\n              </Col>\n            </CardDeck>\n          </Row>\n          <Row id=\"gestion\">\n            <Col xs={12} className=\"home-section-title\">\n              <h3>Espace de gestion</h3>\n            </Col>\n            <CardDeck>\n              <Col xs={12} sm={6} md={4}>\n                <CardHome title={'Gérer vos clients'}\n                text={'Cette interface vous permet de gérer vos clients ainsi que les parcs et capteurs qui leur sont associés.'}\n                url={'/gererclient'}\n                link={'Gestion des clients'} />\n              </Col>\n              <Col xs={12} sm={6} md={4}>\n                <CardHome title={'Gérer vos parcs'}\n                text={'Cette interface vous permet de gérer l\\'ensemble de vos parcs par clients ainsi que les capteurs qui leur sont associés.'}\n                url={'/gererparc'}\n                link={'Gestion des parcs'} />\n              </Col>\n              <Col xs={12} sm={6} md={4}>\n                <CardHome title={'Gérer vos capteurs'}\n                text={'Cette interface vous permet de gérer l\\'ensemble de vos capteurs par clients et/ou parcs.'}\n                url={'/gerercapteur'}\n                link={'Gestion des capteurs'} />\n              </Col>\n            </CardDeck>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nexport default Home\n","import axios from 'axios'\n\n// GET ALL CLIENTS\nexport function getClients() {\n  return function(dispatch) {\n    axios.get('/clients')\n    .then(function(response) {\n      dispatch({ type:\"GET_CLIENTS\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"GET_CLIENTS_REJECTED\", payload:err })\n    })\n  }\n}\n\n// GET ONE CLIENT\nexport function getOneClient(id) {\n  return function(dispatch) {\n    axios.get('/clients/' + id)\n    .then(function(response) {\n      dispatch({ type:\"GET_ONE_CLIENT\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"GET_ONE_CLIENT_REJECTED\", payload:err })\n    })\n  }\n}\n\nexport function clearOneClient() {\n  return function(dispatch) {\n    dispatch({ type:\"CLEAR_ONE_CLIENT\", payload: []})\n  }\n}\n\n// POST CLIENTS\nexport function postClient(clients) {\n  return function(dispatch) {\n    axios.post('/clients', clients)\n    .then(function(response) {\n      dispatch({ type:\"POST_CLIENT\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"POST_CLIENT_REJECTED\", payload:err })\n    })\n  }\n}\n\n// UPDATE CLIENTS\nexport function updateClient(id, newData) {\n  return function(dispatch) {\n    axios.put('/clients/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_CLIENT\", payload:response.data, id:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_CLIENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// DELETE CLIENTS\nexport function deleteClient(id){\n  return function(dispatch) {\n    axios.delete('/clients/' + id)\n    .then(function(response) {\n      dispatch({type:'DELETE_CLIENT', payload:id})\n    })\n    .catch(function(err) {\n      dispatch({type:'DELETE_CLIENT_REJECTED', payload:err})\n    })\n  }\n}\n","import axios from 'axios'\n\n// GET ALL PARCS\nexport function getParcs() {\n  return function(dispatch) {\n    axios.get('/parcs')\n    .then(function(response) {\n      dispatch({ type:\"GET_PARCS\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"GET_PARCS_REJECTED\", payload:err })\n    })\n  }\n}\n\n// GET ONE PARC\nexport function getOneParc(id) {\n  return function(dispatch) {\n    axios.get('/parcs/' + id)\n    .then(function(response) {\n      dispatch({ type:\"GET_ONE_PARC\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"GET_ONE_PARC_REJECTED\", payload:err })\n    })\n  }\n}\n\nexport function clearOneParc() {\n  return function(dispatch) {\n    dispatch({ type:\"CLEAR_ONE_PARC\", payload: []})\n  }\n}\n\n// POST PARC\nexport function postParc(parcs) {\n  return function(dispatch) {\n    axios.post('/parcs', parcs)\n    .then(function(response) {\n      dispatch({ type:\"POST_PARC\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"POST_PARC_REJECTED\", payload:err })\n    })\n  }\n}\n\n// UPDATE PARC\nexport function updateParc(id, newData) {\n  return function(dispatch) {\n    axios.put('/parcs/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_PARC\", payload:response.data, id:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_PARC_REJECTED\", payload:err})\n    })\n  }\n}\n\n// DELETE PARC\nexport function deleteParc(id){\n  return function(dispatch) {\n    axios.delete('/parcs/' + id)\n    .then(function(response) {\n      dispatch({type:'DELETE_PARC', payload:id})\n    })\n    .catch(function(err) {\n      dispatch({type:'DELETE_PARC_REJECTED', payload:err})\n    })\n  }\n}\n","import axios from 'axios'\n\n// GET ALL CAPTEURS\nexport function getCapteurs() {\n  return function(dispatch) {\n    axios.get('/capteurs')\n    .then(function(response) {\n      dispatch({ type:\"GET_CAPTEURS\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"GET_CAPTEURS_REJECTED\", payload:err })\n    })\n  }\n}\n\n// GET ONE CAPTEUR\nexport function getOneCapteur(id) {\n  return function(dispatch) {\n    axios.get('/capteurs/' + id)\n    .then(function(response) {\n      dispatch({ type:\"GET_ONE_CAPTEUR\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"GET_ONE_CAPTEUR_REJECTED\", payload:err })\n    })\n  }\n}\n\nexport function clearOneCapteur() {\n  return function(dispatch) {\n    dispatch({ type:\"CLEAR_ONE_CAPTEUR\", payload: []})\n  }\n}\n\n// POST CAPTEUR\nexport function postCapteur(capteurs) {\n  return function(dispatch) {\n    axios.post('/capteurs', capteurs)\n    .then(function(response) {\n      dispatch({ type:\"POST_CAPTEUR\", payload:response.data })\n    })\n    .catch(function(err) {\n      dispatch({ type:\"POST_CAPTEUR_REJECTED\", payload:err })\n    })\n  }\n}\n\n// UPDATE CAPTEUR\nexport function updateCapteur(id, newData) {\n  return function(dispatch) {\n    axios.put('/capteurs/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_CAPTEUR\", payload:response.data, id:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_CAPTEUR_REJECTED\", payload:err})\n    })\n  }\n}\n\n// DELETE CAPTEUR\nexport function deleteCapteur(id){\n  return function(dispatch) {\n    axios.delete('/capteurs/' + id)\n    .then(function(response) {\n      dispatch({type:'DELETE_CAPTEUR', payload:id})\n    })\n    .catch(function(err) {\n      dispatch({type:'DELETE_CAPTEUR_REJECTED', payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Button, Card, Form } from 'react-bootstrap'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\n\nimport { postClient, updateClient } from '../../actions/ClientAction'\nimport { postParc, updateParc } from '../../actions/ParcAction'\nimport { postCapteur, updateCapteur } from '../../actions/CapteurAction'\n\nclass Ajout extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      client: {},\n      parc: {},\n      capteur: [],\n      clientName: false,\n      parcName: false\n    }\n  }\n\n  inputName(e) {\n    this.setState({ [e.target.name]: false })\n  }\n\n  newClient() {\n    document.getElementById('ajout-client').style.display = 'block'\n    document.getElementById('ajout-parc').style.display = 'none'\n    document.getElementById('ajout-capteur').style.display = 'none'\n\n    document.getElementById(\"ajout-capteur-form\").reset()\n\n    this.setState({\n      client: {},\n      parc: {},\n      capteur: []\n    })\n  }\n\n  newParc() {\n    document.getElementById('ajout-parc').style.display = 'block'\n    document.getElementById('ajout-capteur').style.display = 'none'\n\n    document.getElementById(\"ajout-capteur-form\").reset()\n\n    this.setState({\n      parc: {},\n      capteur: []\n    })\n  }\n\n  // CRUD Operations\n  // --------->> Gestion des Clients <<---------\n  addClient(e) {\n    e.preventDefault()\n    let clientName = document.getElementById('clientName').value\n    let clientDesc = document.getElementById('clientDesc').value\n\n    let data = {\n      \"nom\": clientName,\n      \"description\": clientDesc\n    }\n\n    clientName !== '' ? this.postClient(data) : this.setState({clientName: true})\n  }\n\n  postClient(data) {\n    this.props.postClient(data)\n    this.setState({ client: {nom:data.nom, description:data.description} })\n    document.getElementById('ajout-client').style.display = 'none'\n    document.getElementById('ajout-parc').style.display = 'block'\n    document.getElementById(\"ajout-client-form\").reset()\n  }\n\n  updateClient(id, data) {\n    this.props.updateClient(id, data)\n  }\n\n  // --------->> Gestion des Parcs <<---------\n  addParc(e) {\n    e.preventDefault()\n    let parcName = document.getElementById('parcName').value\n    let parcDesc = document.getElementById('parcDesc').value\n\n    let data = {\n      \"clientID\": this.props.postClients._id,\n      \"nom\": parcName,\n      \"description\": parcDesc\n    }\n\n    parcName !== '' ? this.postParc(data) : this.setState({parcName: true})\n  }\n\n  postParc(data) {\n    this.props.postParc(data)\n    this.setState({ parc: {nom:data.nom, description:data.description} })\n    document.getElementById('ajout-parc').style.display = 'none'\n    document.getElementById('ajout-capteur').style.display = 'block'\n    document.getElementById(\"ajout-parc-form\").reset()\n  }\n\n  updateParc(id, data) {\n    this.props.updateParc(id, data)\n  }\n\n  // --------->> Gestion des Capteurs <<---------\n  addCapteur(e) {\n    e.preventDefault()\n\n    let nomCapteur = document.getElementById('nomCapteur').value\n    let refModele = document.getElementById('refModele').value\n    let constructeur = document.getElementById('constructeur').value\n    let typeMesure = document.getElementById('typeMesure').value\n    let uniteMesure = document.getElementById('uniteMesure').value\n    let reseau = document.getElementById('reseau').value\n    let latitude = document.getElementById('latitude').value\n    let longitude = document.getElementById('longitude').value\n\n    let data = {\n      \"clientID\": this.props.postClients._id,\n      \"parcID\": this.props.postParcs._id,\n      \"nom\": nomCapteur,\n      \"refModele\": refModele,\n      \"constructeur\": constructeur,\n      \"typeMesure\": typeMesure,\n      \"uniteMesure\": uniteMesure,\n      \"reseau\": reseau,\n      \"latitude\": latitude,\n      \"longitude\": longitude\n    }\n\n    if(nomCapteur !== '' && refModele !== '' && constructeur !== '' && typeMesure !== '' && uniteMesure !== '' && reseau !== '') {\n      this.postCapteur(data)\n    }\n  }\n\n  postCapteur(data) {\n    this.props.postCapteur(data)\n    let newArray = [...this.state.capteur]\n    newArray.push(data)\n    this.setState({ capteur: newArray })\n    document.getElementById(\"ajout-capteur-form\").reset()\n  }\n\n  updateCapteur(id, data) {\n    this.props.updateCapteur(id, data)\n  }\n\n  render() {\n    return (\n      <section>\n        <Container>\n          <Row>\n            <Col xs={12} md={6}>\n              <Card id='ajout-client'>\n                <Card.Header>\n                  <Card.Title>Créer un client</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Form onSubmit={this.addClient.bind(this)} id='ajout-client-form'>\n                    <Form.Group controlId=\"clientName\">\n                      <Form.Control type=\"text\" placeholder=\"Nom du client\" onChange={this.inputName.bind(this)} />\n                      {this.state.clientName && <Form.Text className=\"error\">Vous devez entrer un nom pour votre client</Form.Text>}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"clientDesc\">\n                      <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Description du client\" />\n                    </Form.Group>\n\n                    <Button type=\"submit\">Ajouter votre client</Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n\n              <Card id='ajout-parc'>\n                <Card.Header>\n                  <Card.Title>Créer un parc</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Form onSubmit={this.addParc.bind(this)} id='ajout-parc-form'>\n                    <Form.Group controlId=\"parcName\">\n                      <Form.Control type=\"text\" placeholder=\"Nom du parc\" onChange={this.inputName.bind(this)} />\n                      {this.state.parcName && <Form.Text className=\"error\">Vous devez entrer un nom pour votre parc</Form.Text>}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"parcDesc\">\n                      <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Description du parc\" />\n                    </Form.Group>\n\n                    <Button type=\"submit\">Ajouter votre parc</Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n\n              <Card id='ajout-capteur'>\n                <Card.Header>\n                  <Card.Title>Ajouter un capteur</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Form onSubmit={this.addCapteur.bind(this)} id='ajout-capteur-form'>\n                    <Form.Group controlId=\"nomCapteur\">\n                      <Form.Label>Nom du capteur</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Mon capteur 1\" name='nomCapteur' />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"refModele\">\n                      <Form.Label>Référence du modèle</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Référence du capteur\" name='refModele' />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"constructeur\">\n                      <Form.Label>Constructeur</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Constructeur du capteur\" name='constructeur' />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"typeMesure\">\n                      <Form.Label>Type de mesure</Form.Label>\n                      <Form.Control as=\"select\" name='typeMesure'>\n                        <option>Pluviométrie</option>\n                        <option>Vitesse</option>\n                        <option>Température</option>\n                        <option>Position GPS</option>\n                        <option>Volume</option>\n                        <option>Poids</option>\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"uniteMesure\">\n                      <Form.Label>Unité de mesure</Form.Label>\n                      <Form.Control as=\"select\" name='uniteMesure'>\n                        <option>mm</option>\n                        <option>km/h</option>\n                        <option>°C</option>\n                        <option>Coordonnées GPS</option>\n                        <option>m3</option>\n                        <option>Kg</option>\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"reseau\">\n                      <Form.Label>Réseau utilisé</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Sigfox, ...\" name='reseau' />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"latitude\">\n                      <Form.Label>Latitude</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"2.294481\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"longitude\">\n                      <Form.Label>Longitude</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"48.858370\" />\n                    </Form.Group>\n\n                    <Button type=\"reset\">\n                      Annuler\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Enregistrer\n                    </Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col xs={12} md={6}>\n              <Card id='recap'>\n                <Card.Header>\n                  <Card.Title>Récapitulatif</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  {this.state.client.nom !== undefined && <div className='recap-section'><h4 className='client-title'>Votre Client</h4><span className='client-name'>{this.state.client.nom}</span><br/><span className='client-desc'>{this.state.client.description}</span></div>}\n\n                  {this.state.parc.nom !== undefined && <div className='recap-section'><h4 className='client-title'>Les Parcs</h4><span className='client-name'>{this.state.parc.nom}</span><br/><span className='client-desc'>{this.state.parc.description}</span></div>}\n\n                  {this.state.capteur.length > 0 && <h4 className='client-title'>Liste des Capteurs</h4>}\n                  {this.state.capteur.map((capteur, i) => <p key={i}>{capteur.nom}</p>)}\n                </Card.Body>\n              </Card>\n\n              {this.state.capteur.length > 0 && <div><Button onClick={this.newParc.bind(this)}>Ajouter un nouveau parc</Button><Button onClick={this.newClient.bind(this)}>Créer un nouveau client</Button></div>}\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    postClients: state.clients.postClients,\n    postParcs: state.parcs.postParcs\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    postClient, updateClient,\n    postParc, updateParc,\n    postCapteur, updateCapteur\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ajout)\n","import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport Ajout from '../components/backoffice/Ajout'\n\nclass Home extends Component {\n  render() {\n    return (\n      <section id=\"creation\">\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Ajout />\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\n\nimport { updateClient, getOneClient } from '../../actions/ClientAction'\n\nclass UpdateClient extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getOneClient(this.props.clientID)\n  }\n\n  modifyClient(clientID) {\n    let data = {\n      nom: document.getElementById('clientName').value,\n      description: document.getElementById('clientDesc').value\n    }\n    this.props.updateClient(clientID, data)\n    this.props.handler()\n  }\n\n  render() {\n    return (\n      <section id='modifier-client'>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>Modifier un client</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  {this.props.oneClient.length > 0 && this.props.oneClient.map((client, i) => {\n                    return (\n                      <Form key={i}>\n                        <Form.Group controlId=\"clientName\">\n                          <Form.Control type=\"text\" defaultValue={client.nom} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"clientDesc\">\n                          <Form.Control as=\"textarea\" rows=\"3\" defaultValue={client.description} />\n                        </Form.Group>\n\n                        <Button onClick={this.props.handler}>Retour</Button>\n                        <Button onClick={this.modifyClient.bind(this, client._id)}>Modifier votre client</Button>\n                      </Form>\n                    )\n                  })}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    oneClient: state.clients.oneClient\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getOneClient, updateClient\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateClient)\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Table, Modal, Button } from 'react-bootstrap'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { getClients, deleteClient, clearOneClient } from '../../actions/ClientAction'\nimport { getParcs } from '../../actions/ParcAction'\nimport { getCapteurs } from '../../actions/CapteurAction'\n\nimport UpdateClient from './UpdateClient'\n\nclass GererClient extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getClients()\n    this.props.getParcs()\n    this.props.getCapteurs()\n\n    this.state = {\n      updateClient: '',\n      deleteClient: '',\n      clientNom: '',\n      update: false,\n      show: false\n    }\n  }\n\n  finishedUpdate() {\n    this.props.clearOneClient()\n    this.setState({ update: !this.state.update })\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow(clientID, clientNom) {\n    this.setState({ show: true, deleteClient: clientID, clientNom: clientNom });\n  }\n\n  deleteClient() {\n    this.props.deleteClient(this.state.deleteClient)\n    this.setState({ show: false })\n  }\n\n  updateClient(clientID) {\n    this.setState({ updateClient: clientID, update: !this.state.update })\n  }\n\n  render() {\n    const displayClients = this.props.clients.length > 0 && this.props.clients.map((client, i) => {\n      let parcs = 0\n      this.props.parcs.map(parc => {\n        if(parc.clientID === client._id) {\n          parcs += 1\n        }\n        return parcs\n      })\n\n      let capteurs = 0\n      this.props.capteurs.map(capteur => {\n        if(capteur.clientID === client._id) {\n          capteurs += 1\n        }\n        return capteurs\n      })\n\n      return (\n        <tr key={client._id} id={client._id}>\n          <td>{client.nom}</td>\n          <td>{client.description}</td>\n          <td>{parcs}</td>\n          <td>{capteurs}</td>\n          <td>\n            <FontAwesomeIcon icon=\"pencil-alt\" onClick={this.updateClient.bind(this, client._id)} />\n            <FontAwesomeIcon icon=\"times\" onClick={this.handleShow.bind(this, client._id, client.nom)} />\n          </td>\n        </tr>\n      )\n    })\n\n    return (\n      <section id='gerer-client'>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              {this.state.update\n                ? <UpdateClient clientID={this.state.updateClient} handler={this.finishedUpdate.bind(this)} />\n                : <Table striped bordered hover responsive>\n                <thead>\n                  <tr>\n                    <th>Clients</th>\n                    <th>Description</th>\n                    <th>Parcs</th>\n                    <th>Capteurs</th>\n                    <th>Gestion</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {displayClients}\n                </tbody>\n              </Table>\n            }\n            </Col>\n            <Modal show={this.state.show} onHide={this.handleClose.bind(this)}>\n              <Modal.Header closeButton>\n                <Modal.Title>Suppression de votre client {this.state.clientNom}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <p>Etes-vous certain de vouloir supprimer  {this.state.clientNom} ?</p>\n                <Button variant=\"secondary\" onClick={this.handleClose.bind(this)}>\n                  Annuler\n                </Button>\n                <Button variant=\"danger\" onClick={this.deleteClient.bind(this)}>\n                  Supprimer\n                </Button>\n              </Modal.Body>\n            </Modal>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    clients: state.clients.clients,\n    capteurs: state.capteurs.capteurs,\n    parcs: state.parcs.parcs\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getClients, deleteClient, clearOneClient,\n    getParcs,\n    getCapteurs\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GererClient)\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\n\nimport { getOneParc, updateParc } from '../../actions/ParcAction'\n\nclass UpdateParc extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getOneParc(this.props.parcID)\n  }\n\n  modifyParc(parcID) {\n    let data = {\n      nom: document.getElementById('parcName').value,\n      description: document.getElementById('parcDesc').value\n    }\n\n    this.props.updateParc(parcID, data)\n    this.props.handler()\n  }\n\n  render() {\n    return (\n      <section id='modifier-client'>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>Modifier un parc</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  {this.props.oneParc.length > 0 && this.props.oneParc.map((parc, i) => {\n                    return (\n                      <Form key={i}>\n                        <Form.Group controlId=\"parcName\">\n                          <Form.Control type=\"text\" defaultValue={parc.nom} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"parcDesc\">\n                          <Form.Control as=\"textarea\" rows=\"3\" defaultValue={parc.description} />\n                        </Form.Group>\n\n                        <Button onClick={this.props.handler}>Retour</Button>\n                        <Button onClick={this.modifyParc.bind(this, parc._id)}>Modifier votre parc</Button>\n                      </Form>\n                    )\n                  })}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    oneParc: state.parcs.oneParc\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getOneParc, updateParc\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateParc)\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Table, Modal, Button } from 'react-bootstrap'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { getClients } from '../../actions/ClientAction'\nimport { getParcs, deleteParc, clearOneParc } from '../../actions/ParcAction'\nimport { getCapteurs } from '../../actions/CapteurAction'\n\nimport UpdateParc from './UpdateParc'\n\nclass GererParc extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getClients()\n    this.props.getParcs()\n    this.props.getCapteurs()\n\n    this.state = {\n      updateParc: '',\n      deleteParc: '',\n      parcNom: '',\n      update: false,\n      show: false\n    }\n  }\n\n  finishedUpdate() {\n    this.props.clearOneParc()\n    this.setState({ update: !this.state.update })\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow(parcID, parcNom) {\n    this.setState({ show: true, deleteParc: parcID, parcNom: parcNom });\n  }\n\n  updateParc(parcID) {\n    this.setState({ updateParc: parcID, update: !this.state.update })\n  }\n\n  deleteParc() {\n    this.props.deleteParc(this.state.deleteParc)\n    this.setState({ show: false })\n  }\n\n  render() {\n    const displayParcs = this.props.parcs.length > 0 && this.props.parcs.map(parc => {\n      let capteurs = 0\n\n      this.props.capteurs.map(capteur => {\n        if(capteur.parcID === parc._id) capteurs += 1\n        return capteurs\n      })\n\n      const clientName = this.props.clients.map(client => {\n        if(client._id === parc.clientID) return client.nom\n        return true\n      })\n\n      return (\n        <tr key={parc._id} id={parc._id}>\n          <td>{parc.nom}</td>\n          <td>{parc.description}</td>\n          <td>{clientName}</td>\n          <td>{capteurs}</td>\n          <td>\n          <FontAwesomeIcon icon=\"pencil-alt\" onClick={this.updateParc.bind(this, parc._id)} />\n          <FontAwesomeIcon icon=\"times\" onClick={this.handleShow.bind(this, parc._id, parc.nom)} />\n          </td>\n        </tr>\n      )\n    })\n\n    return (\n      <section id='gerer-parc'>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              {this.state.update\n                ? <UpdateParc parcID={this.state.updateParc} handler={this.finishedUpdate.bind(this)} />\n                : <Table striped bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>Parcs</th>\n                      <th>Description</th>\n                      <th>Clients</th>\n                      <th>Capteurs</th>\n                      <th>Gestion</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {displayParcs}\n                  </tbody>\n                </Table>\n              }\n            </Col>\n            <Modal show={this.state.show} onHide={this.handleClose.bind(this)}>\n              <Modal.Header closeButton>\n                <Modal.Title>Suppression de votre parc: {this.state.parcNom}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <p>Etes vous certain de vouloir supprimer {this.state.parcNom} ?</p>\n                <Button variant=\"secondary\" onClick={this.handleClose.bind(this)}>\n                  Annuler\n                </Button>\n                <Button variant=\"danger\" onClick={this.deleteParc.bind(this)}>\n                  Supprimer\n                </Button>\n              </Modal.Body>\n            </Modal>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    clients: state.clients.clients,\n    capteurs: state.capteurs.capteurs,\n    parcs: state.parcs.parcs\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getClients,\n    getParcs, deleteParc, clearOneParc,\n    getCapteurs\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GererParc)\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\n\nimport { updateCapteur, getOneCapteur } from '../../actions/CapteurAction'\n\nclass UpdateCapteur extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getOneCapteur(this.props.capteurID)\n  }\n\n  modifyCapteur(capteurID) {\n    let data = {\n      nom: document.getElementById('nomCapteur').value,\n      refModele: document.getElementById('refModele').value,\n      constructeur: document.getElementById('constructeur').value,\n      typeMesure: document.getElementById('typeMesure').value,\n      uniteMesure: document.getElementById('uniteMesure').value,\n      reseau: document.getElementById('reseau').value,\n      latitude: document.getElementById('latitude').value,\n      longitude: document.getElementById('longitude').value,\n    }\n\n    this.props.updateCapteur(capteurID, data)\n    this.props.handler()\n  }\n\n  render() {\n    return (\n      <section id='modifier-client'>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>Modifier un parc</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  {this.props.oneCapteur.length > 0 && this.props.oneCapteur.map((capteur, i) => {\n                    return (\n                      <Form key={i}>\n                        <Form.Group controlId=\"nomCapteur\">\n                          <Form.Label>Nom du capteur</Form.Label>\n                          <Form.Control type=\"text\" defaultValue={capteur.nom} name='nomCapteur' />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"refModele\">\n                          <Form.Label>Référence du modèle</Form.Label>\n                          <Form.Control type=\"text\" defaultValue={capteur.refModele} name='refModele' />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"constructeur\">\n                          <Form.Label>Constructeur</Form.Label>\n                          <Form.Control type=\"text\" defaultValue={capteur.constructeur} name='constructeur' />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"typeMesure\">\n                          <Form.Label>Type de mesure</Form.Label>\n                          <Form.Control as=\"select\" defaultValue={capteur.typeMesure} name='typeMesure'>\n                            <option>Pluviométrie</option>\n                            <option>Vitesse</option>\n                            <option>Température</option>\n                            <option>Position GPS</option>\n                            <option>Volume</option>\n                            <option>Poids</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"uniteMesure\">\n                          <Form.Label>Unité de mesure</Form.Label>\n                          <Form.Control as=\"select\" defaultValue={capteur.uniteMesure} name='uniteMesure'>\n                            <option>mm</option>\n                            <option>km/h</option>\n                            <option>°C</option>\n                            <option>Coordonnées GPS</option>\n                            <option>m3</option>\n                            <option>Kg</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"reseau\">\n                          <Form.Label>Réseau utilisé</Form.Label>\n                          <Form.Control type=\"text\" defaultValue={capteur.reseau} name='reseau' />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"latitude\">\n                          <Form.Label>Latitude</Form.Label>\n                          <Form.Control type=\"text\" defaultValue={capteur.latitude} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"longitude\">\n                          <Form.Label>Longitude</Form.Label>\n                          <Form.Control type=\"text\" defaultValue={capteur.longitude} />\n                        </Form.Group>\n\n                        <Button onClick={this.props.handler}>Retour</Button>\n                        <Button onClick={this.modifyCapteur.bind(this, capteur._id)}>Modifier votre capteur</Button>\n                      </Form>\n                    )\n                  })}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    oneCapteur: state.capteurs.oneCapteur\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateCapteur, getOneCapteur\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateCapteur)\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Table, Modal, Button } from 'react-bootstrap'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { getCapteurs, deleteCapteur, clearOneCapteur } from '../../actions/CapteurAction'\nimport { getClients } from '../../actions/ClientAction'\nimport { getParcs } from '../../actions/ParcAction'\n\nimport UpdateCapteur from './UpdateCapteur'\n\nclass GererCapteur extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getCapteurs()\n    this.props.getClients()\n    this.props.getParcs()\n\n    this.state = {\n      deleteCapteur: '',\n      updateCapteur: '',\n      capteurNom: '',\n      clientNom: '',\n      parcNom: '',\n      update: false,\n      show: false\n    }\n  }\n\n  finishedUpdate() {\n    this.props.clearOneCapteur()\n    this.setState({ updateCapteur: '', update: !this.state.update })\n  }\n\n  handleClose() {\n    this.setState({ show: false })\n  }\n\n  handleShow(capteurID, capteurNom, clientNom, parcNom) {\n    this.setState({ show: true, deleteCapteur: capteurID, capteurNom: capteurNom, clientNom: clientNom, parcNom: parcNom })\n  }\n\n  updateCapteur(capteurID) {\n    this.setState({ updateCapteur: capteurID, update: !this.state.update })\n  }\n\n  deleteCapteur() {\n    this.props.deleteCapteur(this.state.deleteCapteur)\n    this.setState({ show: false })\n  }\n\n  render() {\n    const displayCapteurs = this.props.capteurs.length > 0 && this.props.capteurs.map(capteur => {\n      const clientName = this.props.clients.map(client => {\n        if(client._id === capteur.clientID) return client.nom\n        return true\n      })\n\n      const parcName = this.props.parcs.map(parc => {\n        if(parc._id === capteur.parcID) return parc.nom\n        return true\n      })\n\n      return (\n        <tr key={capteur._id} id={capteur._id}>\n          <td>{capteur.nom}</td>\n          <td>{capteur.refModele}</td>\n          <td>{capteur.constructeur}</td>\n          <td>{capteur.typeMesure}</td>\n          <td>{capteur.uniteMesure}</td>\n          <td>{capteur.reseau}</td>\n          <td>x: {capteur.latitude} y: {capteur.longitude}</td>\n          <td>{clientName}</td>\n          <td>{parcName}</td>\n          <td>\n            <FontAwesomeIcon icon=\"pencil-alt\" onClick={this.updateCapteur.bind(this, capteur._id)} />\n            <FontAwesomeIcon icon=\"times\" onClick={this.handleShow.bind(this, capteur._id, capteur.nom, clientName, parcName)} />\n          </td>\n        </tr>\n      )\n    })\n\n    return (\n      <section id='gerer-capteur'>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              {this.state.update\n                ? <UpdateCapteur capteurID={this.state.updateCapteur} handler={this.finishedUpdate.bind(this)} />\n                : <Table striped bordered hover responsive>\n                  <thead>\n                    <tr>\n                      <th>Capteur</th>\n                      <th>Référence</th>\n                      <th>Constructeur</th>\n                      <th>Type de mesure</th>\n                      <th>Unité de mesure</th>\n                      <th>Réseau</th>\n                      <th>Coordonnées</th>\n                      <th>Clients</th>\n                      <th>Parcs</th>\n                      <th>Gestion</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {displayCapteurs}\n                  </tbody>\n                </Table>\n              }\n            </Col>\n            <Modal show={this.state.show} onHide={this.handleClose.bind(this)}>\n              <Modal.Header closeButton>\n                <Modal.Title>Suppression du capteur: {this.state.capteurNom}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <p>Etes vous certain de vouloir supprimer {this.state.capteurNom} ?</p>\n                <p>Client : {this.state.clientNom}</p>\n                <p>Parcs : {this.state.parcNom}</p>\n                <Button variant=\"secondary\" onClick={this.handleClose.bind(this)}>\n                  Annuler\n                </Button>\n                <Button variant=\"danger\" onClick={this.deleteCapteur.bind(this)}>\n                  Supprimer\n                </Button>\n              </Modal.Body>\n            </Modal>\n          </Row>\n        </Container>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    capteurs: state.capteurs.capteurs,\n    clients: state.clients.clients,\n    parcs: state.parcs.parcs\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getCapteurs, deleteCapteur, clearOneCapteur,\n    getClients,\n    getParcs\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GererCapteur)\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './containers/Home'\nimport Creation from './containers/Creation'\nimport GererClient from './components/backoffice/GererClient'\nimport GererParc from './components/backoffice/GererParc'\nimport GererCapteur from './components/backoffice/GererCapteur'\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route path='/creationclient' component={Creation} />\n      <Route path='/gererclient' component={GererClient} />\n      <Route path='/gererparc' component={GererParc} />\n      <Route path='/gerercapteur' component={GererCapteur} />\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React, { Component }  from 'react'\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport ariatisLogo from './img/ariatis_logo_full.png'\n\nexport default class Navbars extends Component {\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand><LinkContainer to={\"/\"}><img src={ariatisLogo} alt='Logo Ariatis' /></LinkContainer></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"Espace de création\" id=\"basic-nav-dropdown\">\n              <LinkContainer to={\"/creationclient\"}>\n                <Nav.Link eventKey={4}>Nouveau client</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to={\"/\"}>\n                <Nav.Link eventKey={5}>Nouveau parc</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to={\"/\"}>\n                <Nav.Link eventKey={6}>Nouveau capteur</Nav.Link>\n              </LinkContainer>\n            </NavDropdown>\n            <NavDropdown title=\"Espace de gestion\" id=\"basic-nav-dropdown\">\n              <LinkContainer to={\"/gererclient\"}>\n                <Nav.Link eventKey={1}>des clients</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to={\"/gererparc\"}>\n                <Nav.Link eventKey={2}>des parcs</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to={\"/gerercapteur\"}>\n                <Nav.Link eventKey={3}>des capteurs</Nav.Link>\n              </LinkContainer>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPencilAlt, faTimes, faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport Content from './Content'\nimport Navbar from './Navbar'\n\nlibrary.add(faPencilAlt, faTimes, faPlus)\n\nclass App extends Component {\n  render() {\n    return (\n      <section>\n        <Navbar />\n        <Content />\n      </section>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport { capteurReducer } from './CapteurReducer'\nimport { clientReducer } from './ClientReducer'\nimport { parcReducer } from './ParcReducer'\n\nexport default combineReducers({\n  capteurs: capteurReducer,\n  clients: clientReducer,\n  parcs: parcReducer\n})\n","export function capteurReducer(state={capteurs:[], oneCapteur:{}}, action) {\n  switch(action.type) {\n    // GET ALL\n    case \"GET_CAPTEURS\":\n      return {...state, capteurs:[...action.payload]}\n\n    case \"GET_CAPTEURS_REJECTED\":\n      return action.payload\n\n    // GET ONE\n    case \"GET_ONE_CAPTEUR\":\n      return {...state, oneCapteur:action.payload}\n\n    case \"CLEAR_ONE_CAPTEUR\":\n      return {...state, oneCapteur:action.payload}\n\n    case \"GET_ONE_CAPTEUR_REJECTED\":\n      return action.payload\n\n    // POST\n    case \"POST_CAPTEUR\":\n      return {...state, postCapteurs:action.payload}\n\n    case \"POST_CAPTEUR_REJECTED\":\n      return action.payload\n\n    // DELETE\n    case \"DELETE_CAPTEUR\":\n      const currentDataToDelete = state.capteurs.filter(capteur => capteur._id !== action.payload)\n\n      return {...state, capteurs:currentDataToDelete}\n\n    case \"DELETE_CAPTEUR_REJECTED\":\n      return action.payload\n\n    // UPDATE\n    case \"UPDATE_CAPTEUR\":\n      if(action.payload.ok > 0) {\n        const capteursArray = [...state.capteurs]\n        const newDatas = action.datas\n        let oldCapteur = capteursArray[capteursArray.findIndex(capteur => capteur._id === action.id)]\n        const newCapteur = {\n          _id: oldCapteur._id,\n          clientID: oldCapteur.clientID,\n          parcID: oldCapteur.parcID,\n          constructeur: newDatas.constructeur,\n          latitude: newDatas.latitude,\n          longitude: newDatas.longitude,\n          nom: newDatas.nom,\n          refModele: newDatas.refModele,\n          reseau: newDatas.reseau,\n          typeMesure: newDatas.typeMesure,\n          uniteMesure: newDatas.uniteMesure\n        }\n        capteursArray[capteursArray.findIndex(capteur => capteur._id === action.id)] = newCapteur\n\n        return {\n          ...state,\n          capteurs: capteursArray,\n          msg:'Votre capteur a bien été modifié',\n          style:'success'\n        }\n      } else {\n        return {\n          ...state,\n          msg:'Aucun capteur n\\'a été modifié',\n          style:'alert'\n        }\n      }\n\n    case \"UPDATE_CAPTEUR_REJECTED\":\n      return {\n        ...state,\n        payload: action.payload,\n        msg:'Oups quelque chose s\\'est mal déroulé ! Réessayez plus tard.',\n        style:'danger'\n      }\n\n    // DEFAULT\n    default:\n      return state\n  }\n}\n","export function clientReducer(state={clients:[], oneClient:{}}, action) {\n  switch(action.type) {\n    // GET ALL\n    case \"GET_CLIENTS\":\n      const clients = [...action.payload]\n      clients.sort((a,b) => {\n        let comparaison = 0\n        let nomA = a.nom\n        let nomB = b.nom\n\n        if(nomA.toLowerCase() > nomB.toLowerCase()) {\n          comparaison = 1\n        } else {\n          comparaison = -1\n        }\n\n        return comparaison\n      })\n\n      return {...state, clients:clients}\n\n    case \"GET_CLIENTS_REJECTED\":\n      return action.payload\n\n    // GET ONE\n    case \"GET_ONE_CLIENT\":\n      return {...state, oneClient:action.payload}\n\n    case \"CLEAR_ONE_CLIENT\":\n      return {...state, oneClient:action.payload}\n\n    case \"GET_ONE_CLIENT_REJECTED\":\n      return action.payload\n\n    // POST\n    case \"POST_CLIENT\":\n      return {...state, postClients:action.payload}\n\n    case \"POST_CLIENT_REJECTED\":\n      return action.payload\n\n    // DELETE\n    case \"DELETE_CLIENT\":\n      const currentDataToDelete = state.clients.filter(client => client._id !== action.payload)\n\n      return {...state, clients:currentDataToDelete}\n\n    case \"DELETE_CLIENT_REJECTED\":\n      return action.payload\n\n    // UPDATE\n    case \"UPDATE_CLIENT\":\n      if(action.payload.ok > 0) {\n        const clientsArray = [...state.clients]\n        const newDatas = action.datas\n        let oldClient = clientsArray[clientsArray.findIndex(client => client._id === action.id)]\n        const newClient = {\n          _id: oldClient._id,\n          nom: newDatas.nom,\n          description: newDatas.description\n        }\n        clientsArray[clientsArray.findIndex(client => client._id === action.id)] = newClient\n\n        return {\n          ...state,\n          clients: clientsArray,\n          msg:'Votre client a bien été modifié',\n          style:'success'\n        }\n      } else {\n        return {\n          ...state,\n          msg:'Aucun client n\\'a été modifié',\n          style:'alert'\n        }\n      }\n\n    case \"UPDATE_CLIENT_REJECTED\":\n      return {\n        ...state,\n        payload: action.payload,\n        msg:'Oups quelque chose s\\'est mal déroulé ! Réessayez plus tard.',\n        style:'danger'\n      }\n\n    // DEFAULT\n    default:\n      return state\n  }\n}\n","export function parcReducer(state={parcs:[], oneParc:{}}, action) {\n  switch(action.type) {\n    // GET ALL\n    case \"GET_PARCS\":\n      const parcs = [...action.payload]\n      parcs.sort((a,b) => {\n        let comparaison = 0\n        let nomA = a.nom\n        let nomB = b.nom\n\n        if(nomA.toLowerCase() > nomB.toLowerCase()) {\n          comparaison = 1\n        } else {\n          comparaison = -1\n        }\n\n        return comparaison\n      })\n\n      return {...state, parcs:parcs}\n\n    case \"GET_PARCS_REJECTED\":\n      return action.payload\n\n    // GET ONE\n    case \"GET_ONE_PARC\":\n      return {...state, oneParc:action.payload}\n\n    case \"CLEAR_ONE_PARC\":\n      return {...state, oneParc:action.payload}\n\n    case \"GET_ONE_PARC_REJECTED\":\n      return action.payload\n\n    // POST\n    case \"POST_PARC\":\n      return {...state, postParcs:action.payload}\n\n    case \"POST_PARC_REJECTED\":\n      return action.payload\n\n    // DELETE\n    case \"DELETE_PARC\":\n      const currentDataToDelete = state.parcs.filter(client => client._id !== action.payload)\n\n      return {...state, parcs:currentDataToDelete}\n\n    case \"DELETE_PARC_REJECTED\":\n      return action.payload\n\n    // UPDATE\n    case \"UPDATE_PARC\":\n      if(action.payload.ok > 0) {\n        const parcsArray = [...state.parcs]\n        const newDatas = action.datas\n        let oldClient = parcsArray[parcsArray.findIndex(client => client._id === action.id)]\n        const newClient = {\n          _id: oldClient._id,\n          clientID: oldClient.clientID,\n          nom: newDatas.nom,\n          description: newDatas.description\n        }\n        parcsArray[parcsArray.findIndex(client => client._id === action.id)] = newClient\n\n        return {\n          ...state,\n          parcs: parcsArray,\n          msg:'Votre client a bien été modifié',\n          style:'success'\n        }\n      } else {\n        return {\n          ...state,\n          msg:'Aucun client n\\'a été modifié',\n          style:'alert'\n        }\n      }\n\n    case \"UPDATE_PARC_REJECTED\":\n      return {\n        ...state,\n        payload: action.payload,\n        msg:'Oups quelque chose s\\'est mal déroulé ! Réessayez plus tard.',\n        style:'danger'\n      }\n\n    // DEFAULT\n    default:\n      return state\n  }\n}\n","// Library import\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// CSS import\nimport './style/index.css'\nimport './style/spacelab.min.css'\n\n// Component import\nimport App from './App'\n\n// Services import\nimport * as serviceWorker from './serviceWorker'\n\n// Redux Reducers\nimport reducers from './reducers/index'\n\n// Middlewares import\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport { createPromise } from 'redux-promise-middleware'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst middleware = applyMiddleware(createPromise(), thunk, createLogger())\nconst store = createStore(reducers, composeEnhancer(middleware))\n\nReactDOM.render((\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n), document.getElementById('root'))\n\nexport default store\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ariatis_logo_full.3163df45.png\";"],"sourceRoot":""}